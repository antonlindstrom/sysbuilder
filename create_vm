#!/usr/bin/env bash

VM_HOSTNAME=$1
VM_TEMPLATE=$2

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [ -x $VM_HOSTNAME ]; then
  echo "Requires argument hostname"
  echo "Usage: $0 [HOSTNAME] [TEMPLATE]"
  exit 1
fi

if [ -x $VM_TEMPLATE ]; then
  echo "Requires argument template"
  echo "Usage: $0 [HOSTNAME] [TEMPLATE]"
  exit 1
fi

SYSPREP=$(which virt-sysprep)

if [ $? != 0 ]; then
  echo "FAIL: Command virt-sysprep does not exist!"
  exit 1
fi

if [ -n $3 ]; then
  VM_PATH=$3
  echo "VM_PATH set, using: $VM_PATH"
else
  VM_PATH=/var/lib/libvirt/images
  echo "No VM_PATH, using: $VM_PATH"
fi

if [ -f $VM_PATH/.${VM_HOSTNAME}.lock ]; then
  echo "Detected lockfile for $VM_HOSTNAME"
  echo "VM already created or in creation"
  echo "Lockfile: $VM_PATH/.${VM_HOSTNAME}.lock"
  exit 9
fi

touch $VM_PATH/.${VM_HOSTNAME}.lock

echo "Starting build of: $VM_HOSTNAME"

bash $DIR/scripts/sysprep.sh $VM_HOSTNAME $VM_TEMPLATE $VM_PATH

if [ $? != 0 ]; then
  echo "Could not create image!"
  rm $VM_PATH/.${VM_HOSTNAME}.lock
  exit 2
fi

bash $DIR/scripts/build_template.sh $VM_HOSTNAME $VM_PATH

if [ $? != 0 ]; then
  echo "Could not create template!"
  rm $VM_PATH/.${VM_HOSTNAME}.lock
  exit 2
fi

echo "Starting and defining $VM_HOSTNAME"
/usr/bin/virsh define $VM_PATH/$VM_HOSTNAME.xml > /dev/null
/usr/bin/virsh start $VM_HOSTNAME > /dev/null
